apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "application"
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'flyway'

mainClassName = 'com.jersey.whatnot.app.GrizzlyServer'
sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'

        classpath 'org.postgresql:postgresql:9.3-1100-jdbc4'
        classpath "com.googlecode.flyway:flyway-gradle-plugin:2.3.1"
    }
}

dependencies {
    def tomcatVersion = '7.0.52'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    compile group: "javax.ws.rs", name: "javax.ws.rs-api", version: "2.0"
    compile group: "org.glassfish.jersey.containers", name: "jersey-container-jetty-servlet", version: "2.5.1"
    compile group: "org.glassfish.jersey.containers", name: "jersey-container-grizzly2-http", version: "2.5.1"
    compile group: "org.glassfish.jersey.media", name: "jersey-media-moxy", version: "2.5.1"
    compile group: "org.glassfish.jersey.media", name: "jersey-media-sse", version: "2.5.1"
    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.4.Final'
    compile "postgresql:postgresql:9.1-901.jdbc4"
    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.4.Final'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.5.1'
    testCompile group: 'com.h2database', name: 'h2', version: '1.3.175'
}

flyway {
    user = 'postgres'
    password = '123'
    url = "jdbc:postgresql://localhost:5433/pgdbtest"
}

run {
    standardInput = System.in
}